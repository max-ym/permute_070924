permute:
  version: 0.1
  type: feeder # This file describes a feeder, that provides transformed data to a sink.
  use:
    - transform::*
    - employment_record

# Sink type that this feeder provides data to.
feeder: csv

# Configure the CSV sink.
csv:
  row_sequence:
    start: 1
  date_fmt: transform::date_fmt # This is a reference to the transform's "date_fmt".
  none_fmt: # Function to format None values.
    fn: # Anonymous function. Exact type inferred from sink's parameter definition.
      define: "" # display empty string for None

  # Write the following fields to the CSV file:
  write:
    - csv.row_sequence.next()
    - .employee_id
    - .hire_date
    - .termination_date
      # Example of using a sink defined fn `salary` of the same name as field in `employment_record`.
      # Without explicit path, won't compile due to ambiguity error.
    - employment_record::salary
    - .job_title
  header: # Optional header row for the CSV file from this hypothetical generator.
    - "Row Number"
    - "Employee ID"
    - "Hire Date"
    - "Termination Date"
    - "Salary"
    - "Job Title"

# Define the `salary` function for the `employment_record` entity.
impl employment_record:
  fn salary -> String: |
    # Call the `format` method on the `salary` field of the `employment_record` entity.
    self.salary.format("${:.2}")
